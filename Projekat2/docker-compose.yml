version: '3'

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes   
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  spark-master:
    image: bde2020/spark-master:3.1.2-hadoop3.2
    container_name: spark-master
    ports:
      - "8070:8070"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8070
    volumes:
      - $HOME/streaming:/streaming
  spark-worker-1:
    image: bde2020/spark-worker:3.1.2-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8071:8071"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - SPARK_WORKER_WEBUI_PORT=8071
  spark-worker-2:
    image: bde2020/spark-worker:3.1.2-hadoop3.2
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8072:8071"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - SPARK_WORKER_WEBUI_PORT=8071
  cassandra:
    image: cassandra:latest
    container_name: cassandra-node
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra 
  cassandra-setup:
    build: ./cassandra
    image: cassandra-setup
    container_name: cassandra-setup
    links:
      - cassandra
    command: bash -c "sleep 30 && echo Creating Keyspace && cqlsh cassandra -f schema.cql && sleep infinity"
    restart: unless-stopped

  # streaming:
  #   build: ./streaming/
  #   image: streaming
  #   container_name: streaming
  #   ports:
  #     - "4040:4040"
  #   depends_on:
  #     - cassandra
  #   environment:
  #     SPARK_MASTER_NAME: spark-master
  #     SPARK_MASTER_PORT: 7077
  #     SPARK_SUBMIT_ARGS: "--packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.0.0"
networks:
  default:
    external:
      name: bigdata
volumes:
  cassandra_data:
